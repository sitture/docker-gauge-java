on:
  workflow_call:
    inputs:
      directory:
        default: 'eclipse-temurin'
        required: false
        type: string 
      base_image_version:
        required: true
        type: string
      image_version:
        required: true
        type: string
      default_image:
        default: false
        required: false
        type: boolean

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v4
      -
        name: Set env variables
        run: |
          echo "GAUGE_LATEST_RELEASE=$(curl --silent "https://api.github.com/repos/sitture/docker-gauge-java/releases/latest" | grep '"tag_name":' | sed -E 's/.*"([^"]+)".*/\1/')" >> $GITHUB_ENV
          echo "REPORTPORTAL_LATEST_RELEASE=$(curl --silent "https://api.github.com/repos/reportportal/agent-net-gauge/releases/latest" | grep '"tag_name":' | sed -E 's/.*"([^"]+)".*/\1/')" >> $GITHUB_ENV
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      -
        name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            name=sitture/docker-gauge-java
            name=ghcr.io/sitture/docker-gauge-java
          flavor: |
            latest=false
          tags: |
            type=raw,value=latest,enable=${{ inputs.default_image }},priority=1000
            type=raw,value=${{ inputs.image_version }}
            type=semver,pattern={{version}},enable=${{ inputs.default_image }},priority=900
            type=semver,pattern={{major}}.{{minor}},enable=${{ inputs.default_image }},priority=800
            type=semver,pattern={{version}},suffix=-${{ inputs.image_version }},priority=700
            type=ref,event=pr,prefix=pr-,suffix=-${{ inputs.image_version }}
      -
        name: Login to Docker Hub
        if: github.event_name == 'release' && github.event.action == 'published'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Login to GitHub Container Registry
        if: github.event_name == 'release' && github.event.action == 'published'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      -
        name: Build and push
        uses: docker/build-push-action@v5
        with:
          provenance: false
          build-args: |
            BASE_IMAGE_TAG=${{ inputs.base_image_version }}
            GAUGE_VERSION=${{ env.GAUGE_LATEST_RELEASE }}
            GAUGE_REPORTPORTAL_VERSION=${{ env.REPORTPORTAL_LATEST_RELEASE }}
          context: .
          file: ${{ inputs.directory }}/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name == 'release' && github.event.action == 'published' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
